#!/usr/bin/with-contenv bash

print_vars () {
    if [ -n "${1}" ]; then
	title=" ${1}"
    else
	title=""
    fi
    echo "Environment${title}:"
    echo "    PUID=${PUID}"
    echo "    PGID=${PGID}"
    echo "    USE_TLS=${USE_TLS}"
    echo "    MYHOSTNAME=${MYHOSTNAME}"
    echo "    MYORIGIN=${MYORIGIN}"
    echo "    MYDESTINATION=${MYDESTINATION}"
    echo "    BOUNCE_QUEUE_LIFETIME=${BOUNCE_QUEUE_LIFETIME}"
    echo "    MASQUERADE_DOMAINS=${MASQUERADE_DOMAINS}"
    echo "    SMTPD_TLS_SECURITY_LEVEL=${SMTPD_TLS_SECURITY_LEVEL}"
    echo "    TZ=${TZ}"
}

print_vars init-postfix

# load env file if it exists
if [ -f "/config/env" ]; then
  source /config/env
  print_vars "After sourcing /config/env"
fi

# 
MAIL_CONFIG=/etc/postfix
SPOOL_DIR=/data/spool

#
#	Switch from abc to postfix
#
PUID=${PUID:-$(id -u abc)}
PGID=${PGID:-$(id -g abc)}

DIRS="/var/spool/postfix ${SPOOL_DIR} ${MAIL_CONFIG}"
find ${DIRS} -user postfix -exec chown ${PUID} \{\} \;
find ${DIRS} -group postfix -exec chgrp ${PGID} \{\} \;

userdel abc

groupmod -o -g "$PGID" postfix
usermod -o -u "$PUID" -d ${SPOOL_DIR} postfix

chown postfix:postfix /app
chown postfix:postfix /config
chown postfix:postfix /defaults

# Copy over the spool direcotry if it does not exist
if [ ! -d ${SPOOL_DIR} ]; then
    mkdir -p ${SPOOL_DIR}
    rsync -a /var/spool/postfix/ ${SPOOL_DIR}
fi

# Set the queue directory
postconf -e queue_directory=${SPOOL_DIR}

postconf -e myhostname="${MYHOSTNAME}"
postconf -e myorigin="${MYORIGIN}"
postconf -e mydestination="${MYDESTINATION}"

if [ -n "${MASQUERADE_DOMAINS}" ]; then
    postconf -e masquerade_domains="${MASQUERADE_DOMAINS}"
    postconf -e masquerade_classes=envelope_sender,envelope_recipient,header_sender,header_recipient
fi
	       
case ${USE_TLS} in
    yes|true)
	postconf -e smtpd_tls_CAfile=/etc/ssl/certs/ca-certificates.crt
	postconf -e smtpd_tls_cert_file=/config/server.cert
	postconf -e smtpd_tls_key_file=/config/server.key
	if [ -n "${SMTPD_TLS_SECURITY_LEVEL}" ]; then
	    postconf -e smtpd_tls_security_level=${SMTPD_TLS_SECURITY_LEVEL}
	else
	    postconf -e smtpd_tls_security_level=encrypt
	fi
    ;;
esac

# Do some basic configuration
postconf -e maillog_file=/dev/stdout
#postconf -F '*/*/chroot = n'

# Configure aliases
test -f /config/aliases || cp -p ${MAIL_CONFIG}/aliases /config/aliases
postconf alias_maps=internal:/config/aliases
# postalias lmdb:${MAIL_CONFIG}/aliases

test -n "${BOUNCE_QUEUE_LIFETIME}" && postconf -e bounce_queue_lifetime="${BOUNCE_QUEUE_LIFETIME}"

process_postconf () {
    local file=$1
    local line
    echo "Reprocessing ${file}"
    while read -r line; do
	echo "	${line}"
	postconf ${line}
    done < "${file}"
}

# Read additional config info from /config/postconf
for file in /config/postconf /config/postconf.d/*; do
    test -f "${file}" && process_postconf ${file}
done

# Set permissions on everything
/usr/sbin/postfix set-permissions

echo "Finished init-postfix"
