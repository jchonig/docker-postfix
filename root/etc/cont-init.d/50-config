#!/usr/bin/with-contenv bash

print_vars () {
    if [ -n "${1}" ]; then
	title=" ${1}"
    else
	title=""
    fi
    echo "Environment${title}:"
    echo "    PUID=${PUID}"
    echo "    PGID=${PGID}"
    echo "    USE_SASL=${USE_SASL}"
    echo "    USE_SASLAUTHD=${USE_SASLAUTHD}"
    echo "    USE_DKIM=${USE_DKIM}"
    echo "    USE_TLS=${USE_TLS}"
    echo "    MYHOSTNAME=${MYHOSTNAME}"
    echo "    MYORIGIN=${MYORIGIN}"
    echo "    MYDESTINATION=${MYDESTINATION}"
    echo "    BOUNCE_QUEUE_LIFETIME=${BOUNCE_QUEUE_LIFETIME}"
    echo "    MASQUERADE_DOMAINS=${MASQUERADE_DOMAINS}"
    echo "    SMTPD_TLS_SECURITY_LEVEL=${SMTPD_TLS_SECURITY_LEVEL}"
    echo "    TZ=${TZ}"
    for var in "${!MMONIT_@}"; do
	printf '    %s=%s\n' "$var" "${!var}"
    done    
}

# load env file if it exists
if [ -f "/config/env" ]; then
  source /config/env
  print_vars "After sourcing /config/env"
fi

print_vars

# 
MAIL_CONFIG=/etc/postfix

#
#	Switch from abc to postfix
#
PUID=${PUID:-$(id -u abc)}
PGID=${PGID:-$(id -g abc)}

DIRS="/var/spool/postfix /config/spool ${MAIL_CONFIG}"
find ${DIRS} -user postfix -exec chown ${PUID} \{\} \;
find ${DIRS} -group postfix -exec chgrp ${PGID} \{\} \;

userdel abc

groupmod -o -g "$PGID" postfix
usermod -o -u "$PUID" -d /config/spool postfix

chown postfix:postfix /app
chown postfix:postfix /config
chown postfix:postfix /defaults

# Copy over the spool direcotry if it does not exist
if [ ! -d /config/spool ]; then
    mkdir /config/spool
    rsync -a /var/spool/postfix/ /config/spool
fi

# Set the queue directory
postconf -e queue_directory=/config/spool

postconf -e myhostname="${MYHOSTNAME}"
postconf -e myorigin="${MYORIGIN}"
postconf -e mydestination="${MYDESTINATION}"

if [ -n "${MASQUERADE_DOMAINS}" ]; then
    postconf -e masquerade_domains="${MASQUERADE_DOMAINS}"
    postconf -e masquerade_classes=envelope_sender,envelope_recipient,header_sender,header_recipient
fi
	       
case ${USE_SASL} in
    yes|true)
	postconf -e smtpd_sasl_auth_enable=yes
	postconf -e broken_sasl_auth_clients=yes
	postconf -e smtpd_recipient_restrictions=permit_sasl_authenticated,reject_unauth_destination
	postconf -e smtpd_relay_restrictions=permit_sasl_authenticated,reject
	# mydomain needs to be set properly before this runs
	update_sasldb_users
	chown postfix.postfix /etc/sasl2/sasldb2
	case ${USE_SASLAUTHD} in
	    yes|true)
		cat > /etc/sasl2/smtpd.conf <<EOF
pwcheck_method: saslauthd
mech_list: PLAIN LOGIN CRAM-MD5 DIGEST-MD5 NTLM
EOF
	    ;;
	    *)
		rm -rf /etc/services.d/saslauthd
		;;
	esac
	;;
esac

case ${USE_DKIM} in
    yes|true)
	true
	;;
    *)
	rm -rf /etc/services.d/opendkim
	;;
esac

case ${USE_TLS} in
    yes|true)
	set -x
	postconf -e smtpd_tls_security_level=encrypt
	postconf -e smtpd_tls_CAfile=/etc/ssl/certs/ca-certificates.crt
	postconf -e smtpd_tls_cert_file=/config/server.cert
	postconf -e smtpd_tls_key_file=/config/server.key
	test -n "${SMTPD_TLS_SECURITY_LEVEL}" && postconf -e smtpd_tls_security_level=${SMTPD_TLS_SECURITY_LEVEL}
	set +x
    ;;
esac

# Do some basic configuration
postconf -e maillog_file=/dev/stdout
#postconf -F '*/*/chroot = n'

test -n "${BOUNCE_QUEUE_LIFETIME}" && postconf -e bounce_queue_lifetime="${BOUNCE_QUEUE_LIFETIME}"

# Create the aliases database
postalias lmdb:/etc/postfix/aliases

# Read additional config info from /config/postconf
if [ -f /config/postconf ]; then
    while read -r user type; do
	postconf ${line}
    done < /config/postconf
fi

# Set permissions on everything
/usr/sbin/postfix set-permissions
